name: Update stage0

# This action will update stage0 on master as soon as
# src/stdlib_flags.h and stage0/src/stdlib_flags.h
# are out of sync there, or when manually triggered.
# The update bypasses the merge queue to be quick.
# Also see <doc/dev/bootstrap.md>.

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

concurrency:
  group: stage0
  cancel-in-progress: true

jobs:
  update-stage0:
    runs-on: ubuntu-latest
    steps:
    # This action should push to an otherwise protected branch, so it
    # uses a deploy key with write permissions, as suggested at
    # https://stackoverflow.com/a/76135647/946226
    - uses: actions/checkout@v4
      with:
        ssh-key: ${{secrets.STAGE0_SSH_KEY}}
    - run: echo "should_update_stage0=yes" >> "$GITHUB_ENV"
    - name: Check if automatic update is needed
      if: github.event_name == 'push'
      run: |
        if diff -u src/stdlib_flags.h stage0/src/stdlib_flags.h
        then
          echo "src/stdlib_flags.h and stage0/src/stdlib_flags.h agree, nothing to do"
          echo "should_update_stage0=no" >> "$GITHUB_ENV"
        fi
    - name: Setup git user
      if: env.should_update_stage0 == 'yes'
      run: |
          git config --global user.name "Lean stage0 autoupdater"
          git config --global user.email "<>"
    # Would be nice, but does not work yet:
    # https://github.com/DeterminateSystems/magic-nix-cache/issues/39
    # This action does not run that often and building runs in a few minutes, so ok for now
    #- if: env.should_update_stage0 == 'yes'
    #  uses: DeterminateSystems/magic-nix-cache-action@v2
    - if: env.should_update_stage0 == 'yes'
      name: Restore Build Cache
      uses: actions/cache/restore@v4
      with:
        path: nix-store-cache
        key: Nix Linux-nix-store-cache-${{ github.sha }}
        # fall back to (latest) previous cache
        restore-keys: |
          Nix Linux-nix-store-cache
    - if: env.should_update_stage0 == 'yes'
      name: Further Set Up Nix Cache
      shell: bash -euxo pipefail {0}
      run: |
        # Nix seems to mutate the cache, so make a copy
        cp -r nix-store-cache nix-store-cache-copy || true
    - if: env.should_update_stage0 == 'yes'
      name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        extra-conf: |
          substituters = file://${{ github.workspace }}/nix-store-cache-copy?priority=10&trusted=true https://cache.nixos.org  
    - if: env.should_update_stage0 == 'yes'
      run: nix run .#update-stage0-commit
    - if: env.should_update_stage0 == 'yes'
      run: git show --stat
    - if: env.should_update_stage0 == 'yes' && github.event_name == 'push'
      name: Sanity check # to avoid loops
      run: |
        diff -u src/stdlib_flags.h stage0/src/stdlib_flags.h || exit 1
    - if: env.should_update_stage0 == 'yes'
      run: git push origin
